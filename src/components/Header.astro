---
import { Icon } from 'astro-icon'

const links = [
  { name: '文章', link: '/posts', icon: 'ion:list' },
  { name: '摘录', link: '/excerpts', icon: 'akar-icons:book' },
]
---

<div id="sentinel" class="h-4 md:h-12"></div>
<div class="sticky-nav mx-auto flex-between-center max-w-3xl h-16 px-4">
  <a
    href="/"
    class="p-1 transition ease-in-out duration-100 hover:rotate-45 hover:text-blue-500"
  >
    <svg width="24" height="28" viewBox="0 0 24 28" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path d="M17.5113 5.44965C17.5113 8.13769 15.0884 10.3993 11.9926 10.3993C8.89684 10.3993 6.47392 8.13769 6.47392 5.44965C6.47392 2.7616 8.89684 0.5 11.9926 0.5C15.0884 0.5 17.5113 2.7616 17.5113 5.44965Z" stroke="currentColor"/>
      <path d="M11.5374 14.6283C11.5374 17.3164 9.11446 19.578 6.01869 19.578C2.92292 19.578 0.5 17.3164 0.5 14.6283C0.5 11.9403 2.92292 9.67868 6.01869 9.67868C9.11446 9.67868 11.5374 11.9403 11.5374 14.6283Z" stroke="currentColor"/>
      <path d="M23.5 14.6283C23.5 17.3164 21.077 19.578 17.9813 19.578C14.8855 19.578 12.4626 17.3164 12.4626 14.6283C12.4626 11.9403 14.8855 9.67868 17.9813 9.67868C21.077 9.67868 23.5 11.9403 23.5 14.6283Z" stroke="currentColor"/>
      <path d="M8.06404 24.8171L12.0247 18.2378L15.9854 24.8171H8.06404Z" stroke="currentColor"/>
    </svg>
  </a>
  <nav class="grid grid-flow-col gap-1 whitespace-nowrap font-light">
    {links.map(item => (
      <a
        href={item.link}
        class="nav-link px-2 py-1 rounded-lg hover:bg-gray-200 dark:hover:bg-gray-700"
      >
        <Icon name={item.icon} />
        <span class="inline-block m-1">{item.name}</span>
      </a>
    ))}
    <button
      id="toggle"
      class="p-2 rounded-lg hover:bg-gray-200 dark:hover:bg-gray-700"
    >
      <Icon name="ion:sunny-outline" />
      <Icon name="ion:moon-outline" />
    </button>
    <a
      href="/rss.xml"
      class="p-2 rounded-lg hover:bg-gray-200 dark:hover:bg-gray-700"
    >
      <Icon name="octicon:rss-24" />
    </a>
  </nav>
</div>
<button class="top fixed right-56 bottom-10 opacity-0">
  <Icon name="ion:md-arrow-round-up" />
</button>

<style is:global>
  [astro-icon] {
    @apply mb-1 inline-block w-5 h-5;
  }

  .top [astro-icon] {
    @apply mb-1 inline-block w-7 h-7 text-gray-600 dark:text-gray-200;
  }

  .sticky-nav {
    position: sticky;
    top: -1px;
    z-index: 10;
    backdrop-filter: blur(5px);
    transition: max-width 0.5s cubic-bezier(0.4, 0, 0, 1);
  }
</style>

<script>
import '../utils/darkMode'

const sentinel = document.querySelector('#sentinel')!
const nav = document.querySelector('.sticky-nav')!
const links = document.querySelectorAll('.nav-link')!
const toc = document.querySelector('#toc + ul')
const topButton = document.querySelector('.top')!

links.forEach((link) => {
  const route = window.location.pathname
  const isCurrent = route === link.getAttribute('href')
  link.addEventListener('click', (e) => {
    isCurrent && e.preventDefault()
  })
  isCurrent && link.classList.add('bg-gray-200', 'dark:bg-gray-700')
})

topButton.addEventListener('click', () => {
  window.scrollTo({ top: 0, behavior: 'smooth' })
})

const observer = new IntersectionObserver(handler)
observer.observe(sentinel)

function handler([entry]: IntersectionObserverEntry[]) {
  if (!entry.isIntersecting) {
    nav.classList.add('md:max-w-full')
    toc && toc.classList.add('!opacity-100', '!pointer-events-auto')
    topButton.classList.remove('opacity-0', 'pointer-events-none')
  }

  else {
    nav.classList.remove('md:max-w-full')
    toc && toc.classList.remove('!opacity-100', '!pointer-events-auto')
    topButton.classList.add('opacity-0', 'pointer-events-none')
  }
}
</script>
